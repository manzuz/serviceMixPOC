<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:camel="http://camel.apache.org/schema/spring" xmlns:broker="http://activemq.apache.org/schema/core"
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
         http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
   		 http://www.springframework.org/schema/osgi  
       	 http://www.springframework.org/schema/osgi/spring-osgi.xsd">

	<!-- Spring scan to discover services -->
	<context:component-scan base-package="com.conztanz.connect.mq.sbr.service" />

	<!-- Camel context -->
	<camelContext xmlns="http://camel.apache.org/schema/spring"
		id="camel-server">
		<route>
			<from uri="jms:queue:SBR_14_1_EDI.TO.CC" />
<!-- 			<to uri="bean:SBR_14_1_EDI_SERVICE?method=onMessage" /> -->
			<to uri="bean:SBR_14_1_EDI_SERVICE" />
		</route>
	</camelContext>

	<!-- <camel:camelContext id="camel-client"> -->
	<!-- <camel:template id="camelTemplate" /> -->
	<!-- </camel:camelContext> -->




	<!-- access through Spring's PlatformTransactionManager -->
	<osgi:reference id="osgiPlatformTransactionManager"
		interface="org.springframework.transaction.PlatformTransactionManager" />
	<!-- access through PlatformTransactionManager -->
	<osgi:reference id="osgiJtaTransactionManager"
		interface="javax.transaction.TransactionManager" />




	<bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsTxConfig" />
	</bean>
	
	<!-- Cf. https://access.redhat.com/documentation/en-US/Fuse_ESB_Enterprise/7.0/html/EIP_Transactions_Guide/XaJms-Overview.html -->
	<bean id="jmsTxConfig" class="org.apache.camel.component.jms.JmsConfiguration">

		<property name="connectionFactory" ref="jmsXaPoolConnectionFactory" />
		<property name="transactionManager" ref="osgiPlatformTransactionManager" />
		<property name="transacted" value="false" />
		<property name="cacheLevelName" value="CACHE_CONNECTION" />



		<!-- <property name="connectionFactory" ref="pooledConnectionFactory" /> -->
		<!-- <property name="concurrentConsumers" value="10" /> -->

		<!-- Must be set to false for XA transactions. The name of this property 
			is misleading. What it really indicates is whether or not the Camel JMS component 
			supports local transactions. For XA transactions, on the other hand, you 
			must set this property to false and initialize the transactionManager property 
			with a reference to an XA transaction manager. This property gets its name 
			from the sessionTransacted property in the underlying Spring transaction 
			layer. The transacted property ultimately gets injected into the sessionTransacted 
			property in the Spring transaction layer, so it is the Spring transaction 
			layer that determines the semantics. For more details, see the Javadoc for 
			Spring's AbstractMessageListenerContainer. Cf. https://access.redhat.com/documentation/en-US/Fuse_ESB_Enterprise/7.0/html/EIP_Transactions_Guide/XaJms-Overview.html -->
		<!-- <property name="transacted" value="false" /> -->

	</bean>


	<!-- connection factory wrapper to support auto-enlisting of XA resource -->
	<bean id="jmsXaPoolConnectionFactory" class="org.apache.activemq.pool.XaPooledConnectionFactory">
		<property name="maxConnections" value="1" />
		<property name="connectionFactory" ref="jmsXaConnectionFactory" />
		<property name="transactionManager" ref="osgiJtaTransactionManager" />
	</bean>


	<bean id="jmsXaConnectionFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
		<!-- <property name="brokerURL" value="vm:local"/> 8 -->
		<property name="brokerURL" value="tcp://185.8.51.217:61616" />
		<property name="redeliveryPolicy">
			<bean class="org.apache.activemq.RedeliveryPolicy">
				<property name="maximumRedeliveries" value="0" />
			</bean>
		</property>
	</bean>
	<!-- <bean id="amqConnectionFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory"> -->
	<!-- <property name="brokerURL" value="vm://myBroker" /> -->
	<!-- <property name="brokerURL" value="tcp://185.8.51.217:61616" /> -->
	<!-- </bean> -->

<!-- 	<bean id="jmsXaPoolConnectionFactory" class="org.apache.activemq.pool.XaPooledConnectionFactory " -->
<!-- 		init-method="start" destroy-method="stop"> -->
<!-- 		<property name="maxConnections" value="8" /> -->
<!-- 		<property name="connectionFactory" ref="jmsXaConnectionFactory" /> -->
<!-- 	</bean> -->

	<!-- ActiveMQ XA Resource Manager -->
	<bean id="resourceManager" class="org.apache.activemq.pool.ActiveMQResourceManager"
		init-method="recoverResource">
		<property name="transactionManager" ref="osgiJtaTransactionManager" />
		<property name="connectionFactory" ref="jmsXaPoolConnectionFactory" />
		<property name="resourceName" value="activemq.default" />

	</bean>
</beans>