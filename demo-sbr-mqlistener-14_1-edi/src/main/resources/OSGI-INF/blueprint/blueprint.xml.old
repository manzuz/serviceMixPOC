<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:osgi="http://www.springframework.org/schema/osgi"
	xsi:schemaLocation="
	http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
	http://www.springframework.org/schema/osgi http://www.springframework.org/schema/osgi/spring-osgi.xsd
	">


	<!-- <camel:dataFormats> <camel:json id="jack" library="Jackson"/> </camel:dataFormats> 
		<camel:marshal ref ="jack"/> <camel:convertBodyTo type="java.lang.String" 
		/> <camel:log message="${body}"/> -->


	<!-- Route déterminant l'écoute la file MQ (managée de manière externe) 
		devant recevoir des SBR v14.1 au format EDI Cf : /META-INF/spring/camel-context.xml -->
	<camelContext xmlns="http://camel.apache.org/schema/blueprint">


		<!-- <package>com.conztanz.connect.mq.sbr.service.impl</package> -->
		<!-- <routeBuilder ref="sbr141EdiRouteBuilder" /> -->

		<route>
			<from uri="jms:queue:SBR_14_1_EDI.TO.CC" />
			<transacted ref="required" />
			<to uri="bean:sbr_14_1_edi_service" />

			<!-- call our business logic that is myProcessor -->
			<!-- <process ref="myProcessor" /> -->

		</route>
	</camelContext>

	<bean id="required" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
		<property name="transactionManager" ref="osgiPlatformTransactionManager" />
		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" />
	</bean>

	<!-- Consommation du service OSGI, exposé par le bundle "demo-sbr-cleaner" -->
	<reference id="cleanerRef"
		interface="com.conztanz.sbr.edifact.cleaner.ISBREdifactMessageCleaner" />

	<!-- Exposition du service OSGI qui prend en entrée un SBR v14.1 au format 
		EDI (c'est un connecteur) -->
	<bean id="sbr_14_1_edi_service"
		class="com.conztanz.connect.mq.sbr.service.impl.ConnectMessageListener_SBR14_1_EDIService">
		<property name="cleaner" ref="cleanerRef" />
	</bean>

	<service ref="sbr_14_1_edi_service"
		interface="com.conztanz.connect.mq.sbr.service.IConnectMessageListener_SBR" />



	<bean id="jms" class="org.apache.activemq.camel.component.ActiveMQComponent">
		<property name="configuration" ref="jmsTxConfig" />
	</bean>
	
		<bean id="jmsTxConfig" class="org.apache.camel.component.jms.JmsConfiguration">

		<property name="connectionFactory" ref="jmsXaPoolConnectionFactory" />
		<property name="transactionManager" ref="osgiPlatformTransactionManager" />
		<property name="cacheLevelName" value="CACHE_CONNECTION" />

		<!-- Must be set to false for XA transactions. The name of this property 
			is misleading. What it really indicates is whether or not the Camel JMS component 
			supports local transactions. For XA transactions, on the other hand, you 
			must set this property to false and initialize the transactionManager property 
			with a reference to an XA transaction manager. This property gets its name 
			from the sessionTransacted property in the underlying Spring transaction 
			layer. The transacted property ultimately gets injected into the sessionTransacted 
			property in the Spring transaction layer, so it is the Spring transaction 
			layer that determines the semantics. For more details, see the Javadoc for 
			Spring's AbstractMessageListenerContainer. Cf. https://access.redhat.com/documentation/en-US/Fuse_ESB_Enterprise/7.0/html/EIP_Transactions_Guide/XaJms-Overview.html -->
		<property name="transacted" value="false" />

	</bean>

	<!-- access through Spring's PlatformTransactionManager -->
	<osgi:reference id="osgiPlatformTransactionManager"
		interface="org.springframework.transaction.PlatformTransactionManager" />

	<!-- access through PlatformTransactionManager -->
	<osgi:reference id="osgiJtaTransactionManager"
		interface="javax.transaction.TransactionManager" />

	<!-- connection factory wrapper to support auto-enlisting of XA resource -->
	<bean id="jmsXaPoolConnectionFactory" class="org.apache.activemq.pool.XaPooledConnectionFactory">
		<property name="maxConnections" value="10" />
		<property name="connectionFactory" ref="jmsXaConnectionFactory" />
		<property name="transactionManager" ref="osgiJtaTransactionManager" />
	</bean>


	<bean id="jmsXaConnectionFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
		<!-- <property name="brokerURL" value="vm:local"/> 8 -->
		<property name="brokerURL" value="tcp://185.8.51.217:61616" />
		<property name="redeliveryPolicy">
			<bean class="org.apache.activemq.RedeliveryPolicy">
				<property name="maximumRedeliveries" value="0" />
			</bean>
		</property>
	</bean>

	<!-- ActiveMQ XA Resource Manager -->
	<bean id="resourceManager" class="org.apache.activemq.pool.ActiveMQResourceManager"
		init-method="recoverResource">
		<property name="transactionManager" ref="osgiJtaTransactionManager" />
		<property name="connectionFactory" ref="jmsXaPoolConnectionFactory" />
		<property name="resourceName" value="activemq.default" />

	</bean>

<!-- 	<bean id="PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy"> -->
<!-- 		<property name="transactionManager" ref="osgiPlatformTransactionManager" /> -->
<!-- 		<property name="propagationBehaviorName" value="PROPAGATION_REQUIRED" /> -->
<!-- 	</bean> -->
</blueprint>