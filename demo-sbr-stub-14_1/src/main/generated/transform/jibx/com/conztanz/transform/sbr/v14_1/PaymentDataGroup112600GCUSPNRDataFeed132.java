
package com.conztanz.transform.sbr.v14_1;

import java.util.ArrayList;
import java.util.List;

/** 
 * it will conveys all payment data
 * 
 * Schema fragment(s) for this class:
 * <pre>
 * &lt;xs:complexType xmlns:xs="http://www.w3.org/2001/XMLSchema" name="PaymentDataGroup_112600_G_CUS_PNRDataFeed_132">
 *   &lt;xs:sequence>
 *     &lt;xs:element type="CompanyInformation_94554_S_CUS_PNRDataFeed_132" name="merchantInformation"/>
 *     &lt;xs:element type="MonetaryInformation_94557_S_CUS_PNRDataFeed_132" name="monetaryInformation" minOccurs="0" maxOccurs="999"/>
 *     &lt;xs:element type="ItemReferencesAndVersions_94556_S_CUS_PNRDataFeed_132" name="paymentId" minOccurs="0" maxOccurs="3"/>
 *     &lt;xs:element type="Frequency_94555_S_CUS_PNRDataFeed_132" name="extendedPaymentInfo" minOccurs="0"/>
 *     &lt;xs:element type="StructuredDateTimeInformation_94559_S_CUS_PNRDataFeed_132" name="transactionDateTime" minOccurs="0"/>
 *     &lt;xs:element type="Quantity_94558_S_CUS_PNRDataFeed_132" name="expirationPeriod" minOccurs="0"/>
 *     &lt;xs:element type="TerminalIdentificationDescription_94560_S_CUS_PNRDataFeed_132" name="distributionChannelInformation" minOccurs="0"/>
 *     &lt;xs:element type="FreeTextInformation_94561_S_CUS_PNRDataFeed_132" name="purchaseDescription" minOccurs="0"/>
 *     &lt;xs:element type="GroupForFraudScreening_112601_G_CUS_PNRDataFeed_132" name="fraudScreeningData" minOccurs="0"/>
 *     &lt;xs:element type="Attribute_94553_S_CUS_PNRDataFeed_132" name="paymentDataMap" minOccurs="0" maxOccurs="99"/>
 *   &lt;/xs:sequence>
 * &lt;/xs:complexType>
 * </pre>
 */
public class PaymentDataGroup112600GCUSPNRDataFeed132
{
    private CompanyInformation94554SCUSPNRDataFeed132 merchantInformation;
    private List<MonetaryInformation94557SCUSPNRDataFeed132> monetaryInformationList = new ArrayList<MonetaryInformation94557SCUSPNRDataFeed132>();
    private List<ItemReferencesAndVersions94556SCUSPNRDataFeed132> paymentIdList = new ArrayList<ItemReferencesAndVersions94556SCUSPNRDataFeed132>();
    private Frequency94555SCUSPNRDataFeed132 extendedPaymentInfo;
    private StructuredDateTimeInformation94559SCUSPNRDataFeed132 transactionDateTime;
    private Quantity94558SCUSPNRDataFeed132 expirationPeriod;
    private TerminalIdentificationDescription94560SCUSPNRDataFeed132 distributionChannelInformation;
    private FreeTextInformation94561SCUSPNRDataFeed132 purchaseDescription;
    private GroupForFraudScreening112601GCUSPNRDataFeed132 fraudScreeningData;
    private List<Attribute94553SCUSPNRDataFeed132> paymentDataMapList = new ArrayList<Attribute94553SCUSPNRDataFeed132>();

    /** 
     * Get the 'merchantInformation' element value. Contains merchant information (Entity selling a product/service for wich payment is requested: airline, insurance provider...).
     * 
     * @return value
     */
    public CompanyInformation94554SCUSPNRDataFeed132 getMerchantInformation() {
        return merchantInformation;
    }

    /** 
     * Set the 'merchantInformation' element value. Contains merchant information (Entity selling a product/service for wich payment is requested: airline, insurance provider...).
     * 
     * @param merchantInformation
     */
    public void setMerchantInformation(
            CompanyInformation94554SCUSPNRDataFeed132 merchantInformation) {
        this.merchantInformation = merchantInformation;
    }

    /** 
     * Get the list of 'monetaryInformation' element items. will convey all the monetary informations related to the payment : amount, currency, sub-amounts
     * 
     * @return list
     */
    public List<MonetaryInformation94557SCUSPNRDataFeed132> getMonetaryInformationList() {
        return monetaryInformationList;
    }

    /** 
     * Set the list of 'monetaryInformation' element items. will convey all the monetary informations related to the payment : amount, currency, sub-amounts
     * 
     * @param list
     */
    public void setMonetaryInformationList(
            List<MonetaryInformation94557SCUSPNRDataFeed132> list) {
        monetaryInformationList = list;
    }

    /** 
     * Get the list of 'paymentId' element items. Conveys Payment Record ID (used by Payment Manager) to identify payment in a unique manner.  May convey also a "correlator Id" used by the calling application to reconciliate its payment data.  And also the "transaction Id" generated by the third party system (bank/PSP/PAyPAL...)
     * 
     * @return list
     */
    public List<ItemReferencesAndVersions94556SCUSPNRDataFeed132> getPaymentIdList() {
        return paymentIdList;
    }

    /** 
     * Set the list of 'paymentId' element items. Conveys Payment Record ID (used by Payment Manager) to identify payment in a unique manner.  May convey also a "correlator Id" used by the calling application to reconciliate its payment data.  And also the "transaction Id" generated by the third party system (bank/PSP/PAyPAL...)
     * 
     * @param list
     */
    public void setPaymentIdList(
            List<ItemReferencesAndVersions94556SCUSPNRDataFeed132> list) {
        paymentIdList = list;
    }

    /** 
     * Get the 'extendedPaymentInfo' element value. It will describe the content of the extended payment : when it will start, the frequency and how many times it should occur
     * 
     * @return value
     */
    public Frequency94555SCUSPNRDataFeed132 getExtendedPaymentInfo() {
        return extendedPaymentInfo;
    }

    /** 
     * Set the 'extendedPaymentInfo' element value. It will describe the content of the extended payment : when it will start, the frequency and how many times it should occur
     * 
     * @param extendedPaymentInfo
     */
    public void setExtendedPaymentInfo(
            Frequency94555SCUSPNRDataFeed132 extendedPaymentInfo) {
        this.extendedPaymentInfo = extendedPaymentInfo;
    }

    /** 
     * Get the 'transactionDateTime' element value. The segment conveys the date/time of the transaction
     * 
     * @return value
     */
    public StructuredDateTimeInformation94559SCUSPNRDataFeed132 getTransactionDateTime() {
        return transactionDateTime;
    }

    /** 
     * Set the 'transactionDateTime' element value. The segment conveys the date/time of the transaction
     * 
     * @param transactionDateTime
     */
    public void setTransactionDateTime(
            StructuredDateTimeInformation94559SCUSPNRDataFeed132 transactionDateTime) {
        this.transactionDateTime = transactionDateTime;
    }

    /** 
     * Get the 'expirationPeriod' element value. Will show the duration of validity of the payment request, mesured from receipt by the issuer. The customer has to agree to the payment within this period. Expressed in seconds.
     * 
     * @return value
     */
    public Quantity94558SCUSPNRDataFeed132 getExpirationPeriod() {
        return expirationPeriod;
    }

    /** 
     * Set the 'expirationPeriod' element value. Will show the duration of validity of the payment request, mesured from receipt by the issuer. The customer has to agree to the payment within this period. Expressed in seconds.
     * 
     * @param expirationPeriod
     */
    public void setExpirationPeriod(
            Quantity94558SCUSPNRDataFeed132 expirationPeriod) {
        this.expirationPeriod = expirationPeriod;
    }

    /** 
     * Get the 'distributionChannelInformation' element value. Distribution Channel information
     * 
     * @return value
     */
    public TerminalIdentificationDescription94560SCUSPNRDataFeed132 getDistributionChannelInformation() {
        return distributionChannelInformation;
    }

    /** 
     * Set the 'distributionChannelInformation' element value. Distribution Channel information
     * 
     * @param distributionChannelInformation
     */
    public void setDistributionChannelInformation(
            TerminalIdentificationDescription94560SCUSPNRDataFeed132 distributionChannelInformation) {
        this.distributionChannelInformation = distributionChannelInformation;
    }

    /** 
     * Get the 'purchaseDescription' element value. will convey in free text the description of the purchase
     * 
     * @return value
     */
    public FreeTextInformation94561SCUSPNRDataFeed132 getPurchaseDescription() {
        return purchaseDescription;
    }

    /** 
     * Set the 'purchaseDescription' element value. will convey in free text the description of the purchase
     * 
     * @param purchaseDescription
     */
    public void setPurchaseDescription(
            FreeTextInformation94561SCUSPNRDataFeed132 purchaseDescription) {
        this.purchaseDescription = purchaseDescription;
    }

    /** 
     * Get the 'fraudScreeningData' element value. will convey all information needed to perform the checks requested by the banks/PSPs regarding the prevention of fraud.
     * 
     * @return value
     */
    public GroupForFraudScreening112601GCUSPNRDataFeed132 getFraudScreeningData() {
        return fraudScreeningData;
    }

    /** 
     * Set the 'fraudScreeningData' element value. will convey all information needed to perform the checks requested by the banks/PSPs regarding the prevention of fraud.
     * 
     * @param fraudScreeningData
     */
    public void setFraudScreeningData(
            GroupForFraudScreening112601GCUSPNRDataFeed132 fraudScreeningData) {
        this.fraudScreeningData = fraudScreeningData;
    }

    /** 
     * Get the list of 'paymentDataMap' element items. Will be used to convey information dedicated to the Payment.
     * 
     * @return list
     */
    public List<Attribute94553SCUSPNRDataFeed132> getPaymentDataMapList() {
        return paymentDataMapList;
    }

    /** 
     * Set the list of 'paymentDataMap' element items. Will be used to convey information dedicated to the Payment.
     * 
     * @param list
     */
    public void setPaymentDataMapList(
            List<Attribute94553SCUSPNRDataFeed132> list) {
        paymentDataMapList = list;
    }
}
