<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Parent POM definition -->
	<parent>
		<groupId>com.conztanz</groupId>
		<version>1.4-SNAPSHOT</version>
		<artifactId>travel</artifactId>
	</parent>

	<!-- POM Definition -->
	<artifactId>travel-connect-lifecycle-identification-bundle</artifactId>
	<packaging>bundle</packaging>

	
<build>
	<plugins>
		<!--generate a bundle ( as opposed to a JAR) -->
		<plugin>
			<groupId>org.apache.felix</groupId>
			<artifactId>maven-bundle-plugin</artifactId>
			<version>${maven-bundle-plugin.version}</version>
			<extensions>true</extensions>
		</plugin>
		<plugin>
			<!--generate blueprint from annotations -->
			<groupId>org.apache.aries.blueprint</groupId>
			<artifactId>blueprint-maven-plugin</artifactId>
			<configuration>
				<scanPaths>
					<!-- Specific packages are listed here to prevent the plugin from looking 
						in other packages (coming from dependencies). Thus causing problems (probably 
						spring annotations ) -->
<!-- 					<scanPath>com.conztanz.connect.camel</scanPath> -->
					<scanPath>com.conztanz.connect.identification</scanPath>
					<scanPath>com.conztanz.connect.marshalling</scanPath>
				</scanPaths>
			</configuration>
		</plugin>
		<!-- generate OSGI import and export statements, based on static analysis 
			of code but also statements mentioned here -->
		<plugin>
			<groupId>org.apache.felix</groupId>
			<artifactId>maven-bundle-plugin</artifactId>
			<configuration>
				<instructions>
					<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
					<Bundle-Description>${project.description}</Bundle-Description>
					<Export-Package>
						com.conztanz.connect.identification,
						com.conztanz.connect.marshalling,
						com.conztanz.connect.identification.xpath,
						</Export-Package>
					<Import-Package>
						org.hibernate.*;version="[4.3,5)",
						javax.persistence.*;version="[2.1,3)",
<!-- 						org.hibernate.proxy, -->
						javax.inject;resolution:=optional,
						javax.jms,javax.transaction;version="[1.2,2)",
<!-- 						javax.ws.rs;version="[2.0,3)", -->
						javax.ws.rs.core;version="[2.0,3)",
						javax.xml.bind.annotation,
						org.apache.camel;version="[2.16,3)",
						org.apache.camel.builder;version="[2.16,3)",
						org.apache.camel.component.jms,org.apache.camel.model;version="[2.16,3)",
						org.apache.camel.model.dataformat;version="[2.16,3)",
						org.apache.camel.spring.spi,org.ops4j.pax.cdi.api;version="[0.12,1)",
						org.osgi.service.blueprint;version="[1.0.0,2.0.0)",
						org.springframework.transaction,
						org.osgi.framework.*,
						com.conztanz.connect.model,
						javax.xml.*,
						org.apache.xerces.jaxp,
						org.w3c.dom,
						 org.xml.*
						
<!-- 						org.xml.*, -->
<!-- 						javax.xml.transform, -->
<!-- 	 					org.milyn.*, -->
<!-- 						javax.xml.*, -->
<!-- 						org.apache.camel.*, -->
<!-- 						org.milyn.smooks.edi,  -->
<!-- 						org.milyn.edisax -->
<!-- 						com.conztanz.j2ee.utils, -->
<!-- 						com.conztanz.json -->
					</Import-Package>
					<Embed-Dependency>
						groupId=!org.springframework|org.osgi|org.apache.felix|org.apache.karaf|javax.*|org.hibernate|org.hibernate.*|org.apache.camel|org.milyn;
						artifactId=!framework-connect-model|framewoek-model|xml-apis
<!-- 						inline=true -->
					</Embed-Dependency>
					<Embed-Transitive>true</Embed-Transitive>
				</instructions>
			</configuration>
		</plugin>
	</plugins>
</build>

	<dependencies>
		<!-- Framework dependencies -->
		<dependency>
			<groupId>${framework.groupId}</groupId>
			<artifactId>travel-connect-lifecycle-identification</artifactId>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework</groupId> -->
<!-- 			<artifactId>spring-context</artifactId> -->
<!-- 		</dependency> -->
		
<!-- 		<dependency> -->
<!-- 			<groupId>${framework.groupId}</groupId> -->
<!-- 			<artifactId>${framework.parent.artifact.base}-testing</artifactId> -->
<!-- 		</dependency>		 -->
		<!-- Travel dependencies -->
<!-- 		<dependency> -->
<!-- 			<groupId>${product.groupId}</groupId> -->
<!-- 			<artifactId>${product.parent.artifact.base}-model</artifactId> -->
<!-- 		</dependency> -->
	</dependencies>





</project>